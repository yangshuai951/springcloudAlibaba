##端口
#server.port=9527
##gateway名称
#spring.application.name=springcloud-gateway
#
##开启从注册中心动态创建路由的功能，利用微服务名称进行路由
#spring.cloud.gateway.discovery.locator.enabled=true
##是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
## 使用 Naoos 作为服务注册发现
#spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
#
#
#hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds: 5000
#
## 路由网关配置
##路由的id,没有规定规则但要求唯一,建议配合服务名
#spring.cloud.gateway.routes[0].id=springcloud-order
##匹配后提供服务的路由地址
#spring.cloud.gateway.routes[0].uri=lb://springcloud-order
## 断言，路径相匹配的进行路由
#spring.cloud.gateway.routes[0].predicates[0]=Path=/springcloud-order/**
#spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
##spring.cloud.gateway.routes[0].filters[0].args.name=
#
#
##使用 Sentinel 作为熔断器 进行流量控制等
#feign.sentinel.enabled=true
#spring.cloud.sentinel.transport.port=8791
#spring.cloud.sentinel.transport.dashboard=127.0.0.1:8080
#
##gateway调用下游服务的超时配置
#feign.hystrix.enabled=true
##全局熔断器5s超时(该路由 对应 全局的 hystrix 已经不生效了。 即 不存在 hystrix 了。)
##hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#
#
##配置日志级别，方别调试
#logging.level.org.springframework.cloud.gateway=debug
#
